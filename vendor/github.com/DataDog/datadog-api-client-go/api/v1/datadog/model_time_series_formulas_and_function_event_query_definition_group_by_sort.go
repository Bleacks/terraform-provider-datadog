/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort Data sorting methods.
type TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort struct {
	Aggregation FormulaAndFunctionsEventAggregation `json:"aggregation"`
	// Your chosen metric.
	Metric *string                        `json:"metric,omitempty"`
	Order  *FormulaAndFunctionOrder       `json:"order,omitempty"`
	Type   *FormulaAndFunctionsEventsType `json:"type,omitempty"`
}

// NewTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort instantiates a new TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort(aggregation FormulaAndFunctionsEventAggregation) *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort {
	this := TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort{}
	this.Aggregation = aggregation
	return &this
}

// NewTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySortWithDefaults instantiates a new TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySortWithDefaults() *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort {
	this := TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort{}
	return &this
}

// GetAggregation returns the Aggregation field value
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) GetAggregation() FormulaAndFunctionsEventAggregation {
	if o == nil {
		var ret FormulaAndFunctionsEventAggregation
		return ret
	}

	return o.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field value
// and a boolean to check if the value has been set.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) GetAggregationOk() (*FormulaAndFunctionsEventAggregation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aggregation, true
}

// SetAggregation sets field value
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) SetAggregation(v FormulaAndFunctionsEventAggregation) {
	o.Aggregation = v
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) GetMetric() string {
	if o == nil || o.Metric == nil {
		var ret string
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) GetMetricOk() (*string, bool) {
	if o == nil || o.Metric == nil {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) HasMetric() bool {
	if o != nil && o.Metric != nil {
		return true
	}

	return false
}

// SetMetric gets a reference to the given string and assigns it to the Metric field.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) SetMetric(v string) {
	o.Metric = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) GetOrder() FormulaAndFunctionOrder {
	if o == nil || o.Order == nil {
		var ret FormulaAndFunctionOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) GetOrderOk() (*FormulaAndFunctionOrder, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given FormulaAndFunctionOrder and assigns it to the Order field.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) SetOrder(v FormulaAndFunctionOrder) {
	o.Order = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) GetType() FormulaAndFunctionsEventsType {
	if o == nil || o.Type == nil {
		var ret FormulaAndFunctionsEventsType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) GetTypeOk() (*FormulaAndFunctionsEventsType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given FormulaAndFunctionsEventsType and assigns it to the Type field.
func (o *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) SetType(v FormulaAndFunctionsEventsType) {
	o.Type = &v
}

func (o TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["aggregation"] = o.Aggregation
	}
	if o.Metric != nil {
		toSerialize["metric"] = o.Metric
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort struct {
	value *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort
	isSet bool
}

func (v NullableTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) Get() *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort {
	return v.value
}

func (v *NullableTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) Set(val *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort(val *TimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) *NullableTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort {
	return &NullableTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort{value: val, isSet: true}
}

func (v NullableTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeSeriesFormulasAndFunctionEventQueryDefinitionGroupBySort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
